jobs:
  include:
    - stage: check
      language: python
      python: 3.6
      install:
        - pip install --upgrade black==18.9b0
      script: black . --check --diff
    - stage: check
      language: node_js
      node_js:
        - 13
      install: cd frontend && npm install
      script:
        - npm run check-ci
    - stage: check
      language: python
      sudo: required
      services:
        - docker
      env:
        - CODALAB_USERNAME=codalab CODALAB_PASSWORD=codalab CI=true
      python: 3.6
      dist: trusty
      addons:
        chrome: stable
        firefox: latest
      before_install:
        - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        - sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        - sudo apt-get update
        - sudo apt-get install google-chrome-stable
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
        - sudo service mysql stop
      install:
        # TODO: replace with pip install -r requirements.txt
        - pip install selenium==3.141.0
        - pip install diffimg==0.2.3
        - python3 codalab_service.py build services --version ${TRAVIS_BRANCH} --pull $([ -z "${CODALAB_DOCKER_USERNAME}" ] || [ "$TRAVIS_PULL_REQUEST_BRANCH" != "" ] || echo "--push")
        - python3 codalab_service.py start --services default monitor --version ${TRAVIS_BRANCH}
      before_script:
        #- export PATH="/tmp/firefox:$PATH"
        - wget https://github.com/mozilla/geckodriver/releases/download/v0.20.1/geckodriver-v0.20.1-linux64.tar.gz
        - mkdir geckodriver
        - tar -xzf geckodriver-v0.20.1-linux64.tar.gz -C geckodriver
        - export PATH=$PATH:$PWD/geckodriver
        #  - echo "Using firefox version `firefox --version`
      script:
        - python3 codalab_service.py test --version ${TRAVIS_BRANCH} default
          # Make sure restarting worker doesn't cause any issues (ie in serialization/deserialization)
        - docker restart codalab_worker_1 && python3 codalab_service.py test run --version ${TRAVIS_BRANCH}
        - docker stop codalab_worker_1
        - python3 codalab_service.py start --services worker --version ${TRAVIS_BRANCH} --shared-file-system
        - python3 codalab_service.py test --version ${TRAVIS_BRANCH} --shared-file-system basic run read write kill resources netcat netcurl workers
        - python3 tests/ui/worksheet_ui_tester.py
    - stage: deploy
      script: echo "Deploying"
      language: python
      sudo: required
      services:
        - docker
      env:
        - CODALAB_USERNAME=codalab CODALAB_PASSWORD=codalab CI=true
      python: 3.6
      after_success: echo "skipped"
      before_deploy:
        - pip install twine
      deploy:
        # Build docker images using tag if it's a version tag (we're releasing)
        # Otherwise if we're on master or staging build named images
        - provider: script
          # Remove first char of tag (v) to get version number from tag
          script: ./scripts/travis-deploy.sh ${TRAVIS_TAG#?}
          on:
            # only build on valid semver tags
            tags: true
            condition: $TRAVIS_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+
        - provider: script
          # Build with branch name if not releasing
          script: ./scripts/travis-deploy.sh master
          on:
            # only build for master and staging for debugging
            branch: master
